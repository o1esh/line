################################################################################
#                üíª –£—Ç–∏–ª–∏—Ç–∞ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ Windows v1.3 ‚Äî Ghetto Edition           #
#                         –ê–≤—Ç–æ—Ä: o1esh                                         #
#                         üî• –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è 700+ —Å—Ç—Ä–æ–∫                          #
################################################################################

[Console]::OutputEncoding = [System.Text.Encoding]::UTF8
chcp 65001 | Out-Null

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
if (-not ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {
    Write-Host "üö´ –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞! –ó–∞–ø—É—Å–∫–∞—é —Å –ø–æ–≤—ã—à–µ–Ω–∏–µ–º..." -ForegroundColor Red
    Start-Process pwsh.exe "-NoProfile -ExecutionPolicy Bypass -File `"$PSCommandPath`"" -Verb RunAs
    exit
}

$width = [Console]::WindowWidth
$global:ReportLog = @()
$script:sessionInfoLogged = $false

$logo = @'
                                                        $$\         $$\ $$\                     
                                                        $$ |        $$ |\__|                    
 $$$$$$$\  $$$$$$\   $$$$$$$\  $$$$$$\  $$$$$$$\   $$$$$$$ |        $$ |$$\ $$$$$$$\   $$$$$$\  
$$  _____|$$  __$$\ $$  _____|$$  __$$\ $$  __$$\ $$  __$$ |$$$$$$\ $$ |$$ |$$  __$$\ $$  __$$\ 
\$$$$$$\  $$$$$$$$ |$$ /      $$ /  $$ |$$ |  $$ |$$ /  $$ |\______|$$ |$$ |$$ |  $$ |$$$$$$$$ |
 \____$$\ $$   ____|$$ |      $$ |  $$ |$$ |  $$ |$$ |  $$ |        $$ |$$ |$$ |  $$ |$$   ____|
$$$$$$$  |\$$$$$$$\ \$$$$$$$\ \$$$$$$  |$$ |  $$ |\$$$$$$$ |        $$ |$$ |$$ |  $$ |\$$$$$$$\ 
\_______/  \_______| \_______| \______/ \__|  \__| \_______|        \__|\__|\__|  \__| \_______|
'@

function Show-Header {
    Clear-Host
    $logoLines = $logo -split "`n"
    foreach ($line in $logoLines) {
        if ($width -ge 100) {
            $pad = [math]::Floor(($width - $line.Length) / 2)
            Write-Host (' ' * $pad + $line) -ForegroundColor Cyan
        } else {
            Write-Host $line -ForegroundColor Cyan
        }
    }
    Write-Host ('‚ïê' * $width) -ForegroundColor DarkCyan
    $now = Get-Date -Format 'dd.MM.yyyy HH:mm:ss'
    $timePad = [math]::Floor(($width - ("üïí $now").Length) / 2)
    Write-Host (' ' * $timePad + "üïí $now") -ForegroundColor Gray
    Write-Progress -Activity '–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏' -Status '–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...' -PercentComplete 50
    Show-SystemInfo
    Write-Progress -Activity '–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏' -Completed
    Write-Host ''
    Write-Host '‚ö†Ô∏è –í–ê–ñ–ù–û: –ü–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ–º –ª—é–±—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π —Å–æ–≥–ª–∞—Å—É–π—Ç–µ –∏—Ö —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.' -ForegroundColor Yellow
    Write-Host ''
}

function Show-Frame {
    param([string]$Title, [string[]]$Items)
    Write-Host ('‚îå' + '‚îÄ' * ($width-2) + '‚îê') -ForegroundColor Magenta
    $pad = [math]::Floor(($width - $Title.Length - 2) / 2)
    Write-Host ('‚îÇ' + (' ' * $pad) + $Title + (' ' * $pad) + '‚îÇ') -ForegroundColor Yellow
    Write-Host ('‚îú' + '‚îÄ' * ($width-2) + '‚î§') -ForegroundColor Magenta
    foreach ($item in $Items) {
        if ($item.Length -gt ($width - 4)) {
            $item = $item.Substring(0, $width - 7) + "..."
        }
        $pad = [math]::Floor(($width - $item.Length - 2) / 2)
        Write-Host ('‚îÇ' + ' ' * $pad + $item + ' ' * $pad + '‚îÇ')
    }
    Write-Host ('‚îî' + '‚îÄ' * ($width-2) + '‚îò') -ForegroundColor Magenta
}

function Add-ToReport($entry) {
    $global:ReportLog += "[$(Get-Date -Format 'HH:mm:ss')] $entry"
}

function Show-Report {
    if (-not $ReportLog) {
        Show-Frame 'üìã –û–¢–ß–Å–¢' @('–ù–µ—Ç –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –æ—Ç—á—ë—Ç–∞.')
    } else {
        Show-Frame 'üìã –û–¢–ß–Å–¢ –û –í–´–ü–û–õ–ù–ï–ù–ù–´–• –î–ï–ô–°–¢–í–ò–Ø–•' $ReportLog
        $desktopPath = [Environment]::GetFolderPath('Desktop')
        $timestamp = Get-Date -Format "yyyy-MM-dd_HH-mm-ss"
        $reportFile = Join-Path $desktopPath "diagnostic_report_$timestamp.txt"
        try {
            $ReportLog | Out-File -FilePath $reportFile -Encoding UTF8
            Write-Host "‚úÖ –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤: $reportFile" -ForegroundColor Green
        } catch {
            Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç—á—ë—Ç: $_" -ForegroundColor Red
        }
    }
    Write-Host ''; Write-Host 'üìå –ù–∞–∂–º–∏ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É...' -ForegroundColor DarkGray
    $null = $Host.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown')
}

function Main-Menu {
    $phrases = @(
        "üí¨ –ù–µ –∑–∞–±—É–¥—å ‚Äî –ø–ª–æ—Ö–æ–π –∞–¥–º–∏–Ω –Ω–µ –¥–µ–ª–∞–µ—Ç –±—ç–∫–∞–ø—ã!",
        "üí¨ CTRL + ALT + DEL —Å–ø–∞—Å–ª–∏ –±–æ–ª—å—à–µ –¥—É—à, —á–µ–º –ø—Å–∏—Ö–æ–ª–æ–≥–∏.",
        "üí¨ –í—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç? –û—Ç–ª–∏—á–Ω–æ. –ó–Ω–∞—á–∏—Ç, —Ç—ã –∑—Ä—è –ø—Ä–∏—à—ë–ª. üòé",
        "üí¨ –£–¥–∞–ª–µ–Ω–∏–µ TEMP —Ñ–∞–π–ª–æ–≤ ‚Äî –∫–∞–∫ –æ—Ç–ø—É—Å–∫ –¥–ª—è Windows.",
        "üí¨ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ‚Äî —ç—Ç–æ –Ω–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å, —ç—Ç–æ –ø–∞—Ä–∞–Ω–æ–π—è.",
        "üí¨ –£ —Ö–æ—Ä–æ—à–µ–≥–æ –∞–¥–º–∏–Ω–∞ –≤—Å—ë –∞–≤—Ç–æ–º–∞—Ç–æ–º. –î–∞–∂–µ –∫–æ—Ñ–µ.",
        "üí¨ if (–ø–∞–¥–∞–µ—Ç == true) { reboot(); }",
        "üí¨ –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞? –ü—Ä–æ–≤–µ—Ä—å –ø—Ä–∞–≤–∞. –ü–æ—Ç–æ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏. –ü–æ—Ç–æ–º –∑–æ–≤–∏ –º–µ–Ω—è.",
        "üí¨ –ü–∏–Ω–≥ –µ—Å—Ç—å ‚Äî –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ –Ω–µ–≤–∞–∂–Ω–æ. ü§ô",
        "üí¨ 1–° ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ–≥—Ä–∞–º–º–∞, —ç—Ç–æ —Å—Ç–∏–ª—å –∂–∏–∑–Ω–∏ –∏ –±–æ–ª—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ."
    )
    $quote = Get-Random -InputObject $phrases
    Write-Progress -Activity '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é' -Status '–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ü–∏–π...' -PercentComplete 70
    Show-Frame 'üéõÔ∏è –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ' @(
        "[1] üìã –ò–Ω—Ñ–æ –æ —Å–∏—Å—Ç–µ–º–µ",
        "[2] üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞",
        "[3] üìù –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç",
        "[4] üßπ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –ü–ö",
        "[5] üíΩ –¢–µ–Ω–µ–≤–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ",
        "[6] üîê –ê–∫—Ç–∏–≤–∞—Ü–∏—è Windows",
        "[7] üõ° –ê—É–¥–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
        "[8] üõ† –ë—ã—Å—Ç—Ä—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã",
        "[9] üåê –°–µ—Ç–µ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã",
        "[10] üì¶ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
        "[0] ‚ùå –í—ã–π—Ç–∏",
        "",
        "$quote"
    )
    Write-Progress -Activity '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é' -Completed
}

function Show-SystemInfo {
    $os = Get-CimInstance Win32_OperatingSystem
    $cpu = Get-CimInstance Win32_Processor
    $gpu = Get-CimInstance Win32_VideoController
    $mem = Get-CimInstance Win32_PhysicalMemory

    $totalMemGB = ($mem.Capacity | Measure-Object -Sum).Sum / 1GB
    $uptime = (Get-Date) - $os.LastBootUpTime
    $uptimeFormatted = "{0} –¥. {1} —á. {2} –º–∏–Ω." -f $uptime.Days, $uptime.Hours, $uptime.Minutes

    $ipLocal = (Get-NetIPAddress -AddressFamily IPv4 -InterfaceAlias "*" -ErrorAction SilentlyContinue | Where-Object { $_.IPAddress -notlike '169.*' }).IPAddress | Select-Object -First 1
    try {
        $ipExternal = (Invoke-RestMethod -Uri "http://ipinfo.io/ip" -UseBasicParsing).Trim()
    } catch {
        $ipExternal = '–ù/–î'
    }

    $lines = @(
        "üíª –ò–º—è –ü–ö: $($env:COMPUTERNAME)",
        "ü™ü –û–°: $($os.Caption) $($os.OSArchitecture)",
        "üß† –ü—Ä–æ—Ü: $($cpu.Name.Trim())",
        "üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞: $($gpu.Name.Trim())",
        "üßµ RAM: $([math]::Round($totalMemGB, 1)) –ì–ë",
        "üïê –ê–ø—Ç–∞–π–º: $uptimeFormatted",
        "üì∂ –õ–æ–∫–∞–ª—å–Ω—ã–π IP: $ipLocal",
        "üåê –í–Ω–µ—à–Ω–∏–π IP: $ipExternal"
    )
    Show-Frame 'üßæ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ò–°–¢–ï–ú–ï' $lines
    if (-not $script:sessionInfoLogged) {
        Add-ToReport '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ'
        $script:sessionInfoLogged = $true
    }
}

function Run-Maintenance {
    Show-Frame 'üßπ –û–ë–°–õ–£–ñ–ò–í–ê–ù–ò–ï –ü–ö' @("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ—á–∏—Å—Ç–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞...")

    $actions = @(
        { ipconfig /flushdns | Out-Null; "–û—á–∏—â–µ–Ω DNS-–∫–µ—à" },
        { sfc /scannow | Out-Null; "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ (SFC)" },
        { Remove-Item "$env:TEMP\*" -Recurse -Force -ErrorAction SilentlyContinue; "–û—á–∏—Å—Ç–∫–∞ TEMP" },
        { Clear-RecycleBin -Force -ErrorAction SilentlyContinue; "–û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã" },
        { cmd /c "echo Y | chkdsk C: /F" | Out-Null; "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–∞ (chkdsk)" },
        { UsoClient StartScan | Out-Null; "–ü–æ–∏—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π Windows" }
    )

    $i = 0
    foreach ($action in $actions) {
        $i++
        Write-Progress -Activity '–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ' -PercentComplete ($i * 15)
        try {
            $msg = & $action
            Add-ToReport $msg
            Write-Host "‚úÖ $msg" -ForegroundColor Green
        } catch {
            Write-Host "‚ùå –û—à–∏–±–∫–∞: $_" -ForegroundColor Red
        }
    }

    # –û—á–∏—Å—Ç–∫–∞ TEMP –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    Write-Progress -Activity '–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ' -Status '–û—á–∏—Å—Ç–∫–∞ TEMP –ø—Ä–æ—Ñ–∏–ª–µ–π...' -PercentComplete 90
    $userProfiles = Get-CimInstance Win32_UserProfile | Where-Object { $_.Loaded -eq $false -and $_.Special -eq $false }
    foreach ($profile in $userProfiles) {
        $tempPath = Join-Path $profile.LocalPath 'AppData\Local\Temp'
        if (Test-Path $tempPath) {
            try {
                Remove-Item "$tempPath\*" -Recurse -Force -ErrorAction SilentlyContinue
                Add-ToReport "–û—á–∏—â–µ–Ω TEMP: $tempPath"
            } catch {
                Add-ToReport "–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ TEMP: $tempPath"
            }
        }
    }

    Write-Progress -Activity '–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ' -Completed
    Show-Frame '‚úÖ –û–ë–°–õ–£–ñ–ò–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û' @('–í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.')
    Write-Host "`nüìå –ù–∞–∂–º–∏ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É..." -ForegroundColor DarkGray
    $null = $Host.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown')
}

function Start-ShadowCopy {
    $drives = Get-Volume | Where-Object { $_.DriveType -eq 'Fixed' -and $_.DriveLetter }
    if (-not $drives) {
        Write-Host "‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∏—Å–∫–æ–≤!" -ForegroundColor Red
        return
    }
    
    $options = $drives | ForEach-Object { "$($_.DriveLetter): $($_.FileSystemLabel)" }
    Show-Frame 'üìÄ –í–´–ë–ï–†–ò –î–ò–°–ö –î–õ–Ø –¢–ï–ù–ï–í–û–ì–û –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø' $options

    $selected = Read-Host "–í–≤–µ–¥–∏ –±—É–∫–≤—É –¥–∏—Å–∫–∞ (C/D/etc)"
    if ($selected -notmatch '^[A-Z]$') {
        Write-Host "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!" -ForegroundColor Red
        return
    }

    $drive = "${selected}:"
    if (-not (Test-Path $drive)) {
        Write-Host "‚ùå –î–∏—Å–∫ $drive –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!" -ForegroundColor Red
        return
    }

    try {
        vssadmin create shadow /for=$drive | Out-Null
        Add-ToReport "–°–æ–∑–¥–∞–Ω–∞ —Ç–µ–Ω–µ–≤–∞—è –∫–æ–ø–∏—è –¥–∏—Å–∫–∞ $drive"
        Write-Host "‚úÖ –£—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞: $_" -ForegroundColor Red
    }
    Write-Host "`nüìå –ù–∞–∂–º–∏ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É..." -ForegroundColor DarkGray
    $null = $Host.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown')
}

function Start-SecurityAudit {
    Show-Frame 'üõ° –ê–£–î–ò–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò' @("–ü—Ä–æ–≤–æ–¥–∏—Ç—Å—è –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã...")

    $firewall = Get-NetFirewallProfile | Select-Object Name, Enabled
    $uac = Get-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System' -Name EnableLUA -ErrorAction SilentlyContinue
    $antivirus = (Get-MpComputerStatus).AMServiceEnabled
    $accounts = Get-LocalUser | Where-Object { $_.Enabled -eq $true -and $_.PasswordRequired -eq $false }
    $remoteDesktop = Get-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name fDenyTSConnections

    $results = @()
    $results += "üõ° –ë—Ä–∞–Ω–¥–º–∞—É—ç—Ä:"
    $results += $firewall | ForEach-Object { "  - $($_.Name): $($_.Enabled)" }
    $results += ""
    $results += "üîê UAC –≤–∫–ª—é—á—ë–Ω: $($uac.EnableLUA -eq 1)"
    $results += "üõ° –ê–Ω—Ç–∏–≤–∏—Ä—É—Å –∞–∫—Ç–∏–≤–µ–Ω: $antivirus"
    $results += ""
    $results += "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–µ–∑ –ø–∞—Ä–æ–ª—è:"
    if ($accounts) {
        $results += $accounts.Name
    } else {
        $results += "  - –ù–µ—Ç"
    }
    $results += ""
    $results += "üñ• RDP –≤–∫–ª—é—á—ë–Ω: $($remoteDesktop.fDenyTSConnections -eq 0)"

    Show-Frame 'üîé –†–ï–ó–£–õ–¨–¢–ê–¢ –ê–£–î–ò–¢–ê' $results
    Add-ToReport '–ü—Ä–æ–≤–µ–¥—ë–Ω –∞—É–¥–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏'

    $runMiner = Read-Host 'üß™ –•–æ—á–µ—à—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä –Ω–∞ —Å–∫—Ä—ã—Ç—ã–µ –º–∞–π–Ω–µ—Ä—ã? (Y/N)'
    if ($runMiner -eq 'Y') {
        Write-Host 'üîç –û—Ç–∫—Ä—ã–≤–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–≥—Ä—É–∑–∫–∏ MinerSearch...' -ForegroundColor Cyan
        Start-Process "https://github.com/BlendLog/MinerSearch/releases"
        Add-ToReport '–û—Ç–∫—Ä—ã—Ç–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ MinerSearch'
    }

    $fix = Read-Host 'üîß –•–æ—á–µ—à—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã? (Y/N)'
    if ($fix -eq 'Y') {
        Write-Host 'üöÄ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...' -ForegroundColor Cyan

        if ($uac.EnableLUA -ne 1) {
            Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System' -Name EnableLUA -Value 1
            Add-ToReport 'UAC –≤–∫–ª—é—á—ë–Ω'
        }

        if ($remoteDesktop.fDenyTSConnections -ne 0) {
            Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name fDenyTSConnections -Value 0
            Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
            Add-ToReport 'RDP –≤–∫–ª—é—á—ë–Ω'
        }

        if ($firewall | Where-Object { $_.Enabled -eq $false }) {
            Set-NetFirewallProfile -All -Enabled True
            Add-ToReport '–ë—Ä–∞–Ω–¥–º–∞—É—ç—Ä –≤–∫–ª—é—á—ë–Ω'
        }

        Write-Host '‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!' -ForegroundColor Green

        $revert = Read-Host '‚Ü©Ô∏è –•–æ—á–µ—à—å –æ—Ç–∫–∞—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è? (Y/N)'
        if ($revert -eq 'Y') {
            Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System' -Name EnableLUA -Value 0
            Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name fDenyTSConnections -Value 1
            Disable-NetFirewallProfile -All
            Add-ToReport '–ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–∫–∞—Ç–∞–Ω—ã'
            Write-Host 'üîÅ –û—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!' -ForegroundColor Yellow
        }
    } else {
        Write-Host '‚è≠ –ü—Ä–æ–ø—É—â–µ–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ' -ForegroundColor DarkYellow
    }

    Write-Host "`nüìå –ù–∞–∂–º–∏ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É..." -ForegroundColor DarkGray
    $null = $Host.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown')
}

function Show-QuickTools {
    $tools = @(
        "[1] üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª—É–∂–±—É –ø–µ—á–∞—Ç–∏",
        "[2] üß∞ –û—Ç–∫—Ä—ã—Ç—å –¥–∏—Å–ø–µ—Ç—á–µ—Ä —É—Å—Ç—Ä–æ–π—Å—Ç–≤",
        "[3] üö´ –û—Ç–∫–ª—é—á–∏—Ç—å OneDrive –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫",
        "[4] üóë –û—á–∏—Å—Ç–∏—Ç—å SoftwareDistribution",
        "[5] üí° –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É",
        "[6] üóÇ –û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏",
        "[7] üîê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á—ë—Ç–Ω—ã–º–∏ –∑–∞–ø–∏—Å—è–º–∏",
        "[8] üì° –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ç–µ–≤—ã–µ –∞–¥–∞–ø—Ç–µ—Ä—ã",
        "[9] üß™ –ë—ã—Å—Ç—Ä–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ Defender",
        "[0] üîô –ù–∞–∑–∞–¥"
    )
    Show-Frame 'üõ† –ë–´–°–¢–†–´–ï –ò–ù–°–¢–†–£–ú–ï–ù–¢–´' $tools
    $choice = Read-Host 'üëâ –í—ã–±–µ—Ä–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç'

    switch ($choice) {
        '1' { 
            Restart-Service -Name Spooler -Force
            Add-ToReport '–ü–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞ —Å–ª—É–∂–±–∞ –ø–µ—á–∞—Ç–∏'
            Write-Host '‚úÖ –ì–æ—Ç–æ–≤–æ!' -ForegroundColor Green
        }
        '2' { 
            Start-Process devmgmt.msc
            Add-ToReport '–û—Ç–∫—Ä—ã—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä —É—Å—Ç—Ä–æ–π—Å—Ç–≤'
        }
        '3' { 
            Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run" -Name "OneDrive" -Value $null
            Add-ToReport '–û—Ç–∫–ª—é—á—ë–Ω –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ OneDrive'
            Write-Host '‚úÖ –ì–æ—Ç–æ–≤–æ!' -ForegroundColor Green
        }
        '4' { 
            Remove-Item -Path "$env:windir\SoftwareDistribution\Download\*" -Recurse -Force
            Add-ToReport '–û—á–∏—â–µ–Ω–∞ –ø–∞–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π'
            Write-Host '‚úÖ –ì–æ—Ç–æ–≤–æ!' -ForegroundColor Green
        }
        '5' { 
            Start-Process "taskmgr.exe" -ArgumentList "/7"
            Add-ToReport '–û—Ç–∫—Ä—ã—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á (–∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞)'
        }
        '6' { 
            Start-Process "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup"
            Add-ToReport '–û—Ç–∫—Ä—ã—Ç–∞ –ø–∞–ø–∫–∞ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏'
        }
        '7' { 
            Start-Process "netplwiz"
            Add-ToReport '–û—Ç–∫—Ä—ã—Ç–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á—ë—Ç–Ω—ã–º–∏ –∑–∞–ø–∏—Å—è–º–∏'
        }
        '8' { 
            Get-NetAdapter | Restart-NetAdapter -Confirm:$false
            Add-ToReport '–ü–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã —Å–µ—Ç–µ–≤—ã–µ –∞–¥–∞–ø—Ç–µ—Ä—ã'
            Write-Host '‚úÖ –ì–æ—Ç–æ–≤–æ!' -ForegroundColor Green
        }
        '9' { 
            Start-MpScan -ScanType QuickScan
            Add-ToReport '–ó–∞–ø—É—â–µ–Ω–æ –±—ã—Å—Ç—Ä–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ Defender'
            Write-Host '‚úÖ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—á–∞—Ç–æ!' -ForegroundColor Green
        }
        '0' { return }
        default { Write-Host '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä' -ForegroundColor Red }
    }
    Write-Host "`nüìå –ù–∞–∂–º–∏ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É..." -ForegroundColor DarkGray
    $null = $Host.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown')
}

function Start-EventLogScan {
    Show-Frame 'üßæ –ê–ù–ê–õ–ò–ó –ñ–£–†–ù–ê–õ–û–í –°–û–ë–´–¢–ò–ô' @("–ò–∑–≤–ª–µ–∫–∞—é—Ç—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ —Å–∏—Å—Ç–µ–º—ã...")

    $errors = Get-WinEvent -LogName System -ErrorAction SilentlyContinue |
        Where-Object { $_.LevelDisplayName -eq 'Error' } |
        Select-Object -First 5 | ForEach-Object {
            "[$($_.TimeCreated)] $($_.ProviderName): $($_.Message.Split("`n")[0])"
        }

    if (-not $errors) { $errors = @("‚ö†Ô∏è –û—à–∏–±–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã") }

    Show-Frame 'üìâ –ü–û–°–õ–ï–î–ù–ò–ï –û–®–ò–ë–ö–ò' $errors
    Add-ToReport '–ü—Ä–æ–≤–µ—Ä–µ–Ω –∂—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π System'

    Write-Host "`nüìå –ù–∞–∂–º–∏ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É..." -ForegroundColor DarkGray
    $null = $Host.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown')
}

function Start-NetworkTools {
    Show-Frame 'üåê –°–ï–¢–ï–í–´–ï –ò–ù–°–¢–†–£–ú–ï–ù–¢–´' @("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–µ—Ç–∏...")

    $results = @()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS
    try {
        $dnsCheck = Resolve-DnsName google.com -ErrorAction Stop
        $results += "‚úÖ DNS —Ä–∞–±–æ—Ç–∞–µ—Ç: $($dnsCheck.NameHost)"
    } catch {
        $results += "‚ùå DNS –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    }

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–ª—é–∑–∞
    $gateway = (Get-NetRoute -DestinationPrefix '0.0.0.0/0' | Sort-Object RouteMetric | Select-Object -First 1).NextHop
    if (Test-Connection -ComputerName $gateway -Count 1 -Quiet) {
        $results += "‚úÖ –®–ª—é–∑ –¥–æ—Å—Ç—É–ø–µ–Ω: $gateway"
    } else {
        $results += "‚ùå –®–ª—é–∑ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $gateway"
    }

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP
    try {
        Invoke-WebRequest -Uri "http://example.com" -UseBasicParsing -TimeoutSec 5 | Out-Null
        $results += "‚úÖ HTTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ"
    } catch {
        $results += "‚ùå HTTP –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞"
    }

    # –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥—Å–µ—Ç–∏
    $subnet = ($gateway -split '\.')[0..2] -join '.'
    $results += "üîç –ü–æ–∏—Å–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –≤ —Å–µ—Ç–∏ $subnet.0/24..."
    $alive = 1..254 | Where-Object { Test-Connection -ComputerName "$subnet.$_" -Count 1 -Quiet }

    foreach ($ip in $alive) {
        $hostname = try { ([System.Net.Dns]::GetHostEntry($ip)).HostName } catch { 'N/A' }
        $ports = @(80, 443, 3389) | Where-Object { Test-NetConnection -ComputerName $ip -Port $_ -InformationLevel Quiet }
        $portList = if ($ports) { $ports -join ', ' } else { '–Ω–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö' }
        $results += "  - $ip ($hostname), –ø–æ—Ä—Ç—ã: $portList"
    }

    Show-Frame 'üåê –†–ï–ó–£–õ–¨–¢–ê–¢ –°–ö–ê–ù–ê' $results
    Add-ToReport '–í—ã–ø–æ–ª–Ω–µ–Ω —Å–µ—Ç–µ–≤–æ–π –∞–Ω–∞–ª–∏–∑'

    Write-Host "`nüìå –ù–∞–∂–º–∏ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É..." -ForegroundColor DarkGray
    $null = $Host.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown')
}

function Show-SupportTools {
    $items = @(
        '[1] üñ• –°–º–µ–Ω–∏—Ç—å –∏–º—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞',
        '[2] üåê –°–±—Ä–æ—Å —Å–µ—Ç–µ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫',
        '[3] üñ® –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø—Ä–∏–Ω—Ç–µ—Ä—ã',
        '[4] üîé –í–∫–ª—é—á–∏—Ç—å Windows Search',
        '[5] üë§ –°–æ–∑–¥–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞',
        '[0] üîô –ù–∞–∑–∞–¥'
    )
    Show-Frame 'üì¶ –ò–ù–°–¢–†–£–ú–ï–ù–¢–´ –ü–û–î–î–ï–†–ñ–ö–ò' $items
    $input = Read-Host 'üëâ –í—ã–±–µ—Ä–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç'

    switch ($input) {
        '1' {
            $newName = Read-Host '–í–≤–µ–¥–∏ –Ω–æ–≤–æ–µ –∏–º—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞'
            Rename-Computer -NewName $newName -Force
            Add-ToReport "–ò–º—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: $newName"
            Write-Host '‚úÖ –ì–æ—Ç–æ–≤–æ! –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –ü–ö.' -ForegroundColor Green
        }
        '2' {
            netsh winsock reset | Out-Null
            netsh int ip reset | Out-Null
            Add-ToReport '–°–±—Ä–æ—à–µ–Ω—ã —Å–µ—Ç–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'
            Write-Host '‚úÖ –ì–æ—Ç–æ–≤–æ!' -ForegroundColor Green
        }
        '3' {
            Get-Printer | Remove-Printer -ErrorAction SilentlyContinue
            Add-ToReport '–£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –ø—Ä–∏–Ω—Ç–µ—Ä—ã'
            Write-Host '‚úÖ –ì–æ—Ç–æ–≤–æ!' -ForegroundColor Green
        }
        '4' {
            Set-Service -Name "WSearch" -StartupType Automatic
            Start-Service -Name "WSearch"
            Add-ToReport '–í–∫–ª—é—á–µ–Ω–∞ —Å–ª—É–∂–±–∞ –ø–æ–∏—Å–∫–∞'
            Write-Host '‚úÖ –ì–æ—Ç–æ–≤–æ!' -ForegroundColor Green
        }
        '5' {
            $username = Read-Host '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
            $password = Read-Host '–ü–∞—Ä–æ–ª—å' -AsSecureString
            New-LocalUser -Name $username -Password $password -FullName $username
            Add-LocalGroupMember -Group "Administrators" -Member $username
            Add-ToReport "–°–æ–∑–¥–∞–Ω –ª–æ–∫–∞–ª—å–Ω—ã–π –∞–¥–º–∏–Ω: $username"
            Write-Host '‚úÖ –ì–æ—Ç–æ–≤–æ!' -ForegroundColor Green
        }
        '0' { return }
        default { Write-Host '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä' -ForegroundColor Red }
    }
    Write-Host "`nüìå –ù–∞–∂–º–∏ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É..." -ForegroundColor DarkGray
    $null = $Host.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown')
}

# –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª
while ($true) {
    Show-Header
    Main-Menu
    $choice = Read-Host 'üëá –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ'

    switch ($choice) {
        '1' { Show-SystemInfo }
        '2' { 
            $cpuLoad = (Get-Counter '\Processor(_Total)\% Processor Time').CounterSamples.CookedValue
            $mem = Get-CimInstance Win32_OperatingSystem
            $memUsage = [math]::Round(($mem.TotalVisibleMemorySize - $mem.FreePhysicalMemory) / $mem.TotalVisibleMemorySize * 100, 1)
            $services = Get-Service | Where-Object { $_.Status -eq 'Stopped' -and $_.StartType -eq 'Automatic' } | Select-Object -First 5
            $servicesList = if ($services) { $services.DisplayName -join "`n  - " } else { "–ù–µ—Ç" }

            $results = @(
                "üìä CPU: $([math]::Round($cpuLoad,1))%",
                "üíæ RAM: ${memUsage}%",
                "‚ö†Ô∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å–ª—É–∂–±—ã:",
                "  - $servicesList"
            )
            Show-Frame 'üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê' $results
            Add-ToReport '–í—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã'
            Write-Host "`nüìå –ù–∞–∂–º–∏ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É..." -ForegroundColor DarkGray
            $null = $Host.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown')
        }
        '3' { Show-Report }
        '4' { Run-Maintenance }
        '5' { Start-ShadowCopy }
        '6' { 
            Write-Host 'üîê –ó–∞–ø—É—Å–∫ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ Windows...' -ForegroundColor Cyan
            Start-Process powershell -ArgumentList '-NoExit', '-Command', 'irm https://get.activated.win | iex'
            Add-ToReport '–ó–∞–ø—É—â–µ–Ω —Å–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏'
        }
        '7' { Start-SecurityAudit }
        '8' { Show-QuickTools }
        '9' { Start-NetworkTools }
        '10' { Show-SupportTools }
        '0' { 
            Write-Host 'üëã –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã. –£–¥–∞—á–∏!' -ForegroundColor Cyan
            exit 
        }
        default { 
            Write-Host '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!' -ForegroundColor Red
            Start-Sleep -Seconds 1
        }
    }
}